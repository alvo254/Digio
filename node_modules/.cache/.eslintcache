[{"/home/moringa/Desktop/projects/Digio/src/index.js":"1","/home/moringa/Desktop/projects/Digio/src/App.js":"2","/home/moringa/Desktop/projects/Digio/src/reportWebVitals.js":"3","/home/moringa/Desktop/projects/Digio/src/components/Home/Home.jsx":"4","/home/moringa/Desktop/projects/Digio/src/components/Nav/Nav.jsx":"5","/home/moringa/Desktop/projects/Digio/src/components/Dashboard/Dash.jsx":"6","/home/moringa/Desktop/projects/Digio/src/components/Reviews/Reviews.jsx":"7","/home/moringa/Desktop/projects/Digio/src/components/About/About.jsx":"8","/home/moringa/Desktop/projects/Digio/src/components/AddTm/Addtm.jsx":"9","/home/moringa/Desktop/projects/Digio/src/components/Addstudent/Addstudent.jsx":"10","/home/moringa/Desktop/projects/Digio/src/components/Edit/Edit.jsx":"11"},{"size":535,"mtime":1662523636667,"results":"12","hashOfConfig":"13"},{"size":1078,"mtime":1662655330503,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1662523636667,"results":"15","hashOfConfig":"13"},{"size":150,"mtime":1662559008968,"results":"16","hashOfConfig":"13"},{"size":1967,"mtime":1662658737116,"results":"17","hashOfConfig":"13"},{"size":1765,"mtime":1662617808406,"results":"18","hashOfConfig":"13"},{"size":2087,"mtime":1662621007821,"results":"19","hashOfConfig":"13"},{"size":1729,"mtime":1662646024834,"results":"20","hashOfConfig":"13"},{"size":1834,"mtime":1662658898373,"results":"21","hashOfConfig":"13"},{"size":1740,"mtime":1662653888900,"results":"22","hashOfConfig":"13"},{"size":1364,"mtime":1662657970230,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1bbyb0i",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/moringa/Desktop/projects/Digio/src/index.js",[],[],[],"/home/moringa/Desktop/projects/Digio/src/App.js",["60"],[],"/home/moringa/Desktop/projects/Digio/src/reportWebVitals.js",[],[],"/home/moringa/Desktop/projects/Digio/src/components/Home/Home.jsx",[],[],"/home/moringa/Desktop/projects/Digio/src/components/Nav/Nav.jsx",["61"],[],"/home/moringa/Desktop/projects/Digio/src/components/Dashboard/Dash.jsx",["62"],[],"import React, { useEffect, useState } from 'react'\nimport './Dash.css'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nconst Dash = () => {\n\n    const [tminfo, setTminfo] = useState({\n      name: \"\",\n      email:\"\",\n      speciality:\"\"\n    })\n\n    const handleChange = (e) =>{\n      const {name, value} = e.target\n      setTminfo({...tminfo, [name]:value})\n    }\n\n    // useEffect(()=> {\n    //   axios.post(\"http://localhost:9292/tms\",{\n    //     name: tminfo.name,\n    //     email: tminfo.email,\n    //     speciality: tminfo.speciality\n    //   })\n    // },[])\n\n\n    const submit = (event) =>{\n      event.preventDefault()\n      console.log(tminfo)\n      axios.post(\"http://localhost:9292/tms\",{\n        name: tminfo.name,\n        email: tminfo.email,\n        speciality: tminfo.speciality\n      })\n       .then((recv) => {console.log(recv)})\n       .then(err => console.log(err))\n    }\n\n\n  return (\n    <div className='formation'>\n      <form action=\"\">\n        <div className='info'>\n        <label>Name</label>\n        <input name=\"name\" type=\"text\" placeholder='enter name' value={tminfo.name} onChange={handleChange}/> \n        {/* onChange={(event) => {setJina(event.target.value)}} or onChange={(e) => setTminfo({...tminfo, name: e.target.value})}*/}\n        <label>Email</label>\n        <input name=\"email\" type=\"text\" placeholder='enter name' value={tminfo.email} onChange={handleChange}/>\n        <label>Speciality</label>\n        <input name=\"speciality\" type=\"text\" placeholder='enter name' value={tminfo.speciality} onChange={handleChange}/>\n        <button onClick={submit}> submit</button>\n        <button>Delete</button>\n        <Link to=\"/\">Cancel</Link>\n\n        </div>\n\n      </form>\n\n    </div>\n  )\n}\n\nexport default Dash","/home/moringa/Desktop/projects/Digio/src/components/Reviews/Reviews.jsx",["63","64","65"],[],"import React, { useState } from 'react'\nimport './Reviews.css'\nimport {FaTrash, FaEdit} from \"react-icons/fa\"\n\n\nconst Reviews = () => {\n\n  const [form, setForm] = useState({resturant: \"\", review:\"\" })\n  const [reviews, setReviews] = useState([])\n  const [edit, setEditing] = useState(false)\n\n  const sendit = (e) => {\n    e.preventDefault()\n    setReviews([...reviews, form])\n    setForm({resturant: \"\", review:\"\"})\n\n  }\n\n  const update = e =>{\n    e.preventDefault()\n    setEditing(false)\n    const updatedRevs = reviews.map(review => review.id == form.id ? form : review)\n    setReviews(updatedRevs)\n    setForm({resturant: \"\", review:\"\", id:null })\n  }\n  \n  const handleEdit = id => {\n    const editPost = reviews.filter(review => review.id == id)\n    setForm(editPost[0])\n    setEditing(true)\n  }\n\n  const change = e =>{\n    const {name, value} = e.target\n    setForm({...form, [name]:value})\n  }\n\n  const deleting = id => {\n    const uprev = reviews.filter(review => \n      review.id != id\n      )\n      setReviews(uprev)\n    \n  }\n\n  return (\n    <div className='master'>\n      <form action=\"\" onSubmit={edit ? update : sendit } className=\"form\">\n        <h2>Add Resturant</h2>\n        <label> Name</label>\n        <input type=\"text\" \n        placeholder='Restuarnt name' \n        id=\"resturant\" name='resturant' value={form.resturant} onChange={change}/>\n\n        <label> Location </label>\n        <textarea type=\"text\" \n        placeholder='Please leave a review' \n        id=\"review\" name='review' value={form.review} onChange={change}/>\n        <button type='submit'>{edit ? \"Update\" : \"Submit\"}</button>\n      </form>\n      <div className='revlist'>\n        {reviews.map((review) => \n        <div className='revitem'>\n          <h2>{review.resturant}</h2>\n          <p>{review.review}</p>\n          <div className=\"buttons\">\n            <button onClick={() => deleting(review.id)}> <FaTrash/> </button>\n            <button onClick={() => handleEdit(review.id)}><FaEdit/></button>\n          </div>\n        </div>\n        )}\n\n      </div>\n    </div>\n  )\n}\n\nexport default Reviews","/home/moringa/Desktop/projects/Digio/src/components/About/About.jsx",["66"],[],"/home/moringa/Desktop/projects/Digio/src/components/AddTm/Addtm.jsx",[],[],"/home/moringa/Desktop/projects/Digio/src/components/Addstudent/Addstudent.jsx",["67"],[],"/home/moringa/Desktop/projects/Digio/src/components/Edit/Edit.jsx",[],[],{"ruleId":"68","severity":1,"message":"69","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":31},{"ruleId":"68","severity":1,"message":"69","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":14},{"ruleId":"68","severity":1,"message":"72","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":26},{"ruleId":"73","severity":1,"message":"74","line":22,"column":57,"nodeType":"75","messageId":"76","endLine":22,"endColumn":59},{"ruleId":"73","severity":1,"message":"74","line":28,"column":57,"nodeType":"75","messageId":"76","endLine":28,"endColumn":59},{"ruleId":"73","severity":1,"message":"77","line":40,"column":17,"nodeType":"75","messageId":"76","endLine":40,"endColumn":19},{"ruleId":"68","severity":1,"message":"69","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":14},{"ruleId":"68","severity":1,"message":"69","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":14},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='."]